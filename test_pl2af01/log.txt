ARFE: (defparameter *g* (pl2af '(x (not y) (imp x y))))
*g*

ARFE: (defparameter *args* (nth-value 1 (pl2af '(x (not y) (imp x y)))))
*args*

ARFE: (with-open-file (out "af.dot" :direction :output :if-exists :supersede)
        (print-af-to-dot *g* out))
nil

ARFE: (uiop/run-program:run-program "dot -Tpdf af.dot >af.pdf")
nil
nil
0

ARFE: (uiop/run-program:run-program "dot -Tpng af.dot >af.png")
nil
nil
0

ARFE: (list-extensions *g* #'stable-extension-p)
((a2 a3 a6) (a1 a3 a5) (a1 a2 a4))

ARFE: (list-extensions *g* #'complete-extension-p)
(nil (a2 a3 a6) (a1 a3 a5) (a1 a2 a4))

