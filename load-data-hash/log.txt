
ARFE(3): 

ARFE(3): (PROGN (SETQ *TRACE-OUTPUT* SB-IMPL::*DRIBBLE-STREAM*) NIL) 
NIL
ARFE(4): 

ARFE(4): 

ARFE(4): (ql:quickload "md5")
To load "md5":
  Load 1 ASDF system:
    md5
; Loading "md5"

("md5")
ARFE(5): 

ARFE(5): (deftype octet () '(unsigned-byte 8))

OCTET
ARFE(6): 

ARFE(6): (load-data)
Loading /root/quicklisp/local-projects/arfe/data/4-ir.gz...
Loading /root/quicklisp/local-projects/arfe/data/4.gz...
Loading /root/quicklisp/local-projects/arfe/data/5-ir.gz...
Loading /root/quicklisp/local-projects/arfe/data/5.gz...
Loading /root/quicklisp/local-projects/arfe/data/6-ir.gz...
(*4-IR* *4* *5-IR* *5* *6-IR*)
ARFE(7): 

ARFE(7): (list-data)

(*4-IR* *4* *5-IR* *5* *6-IR*)
ARFE(8): 

ARFE(8): (defun calc-hash! (list)
  (let ((state (md5:make-md5-state)))
    (dolist (item (sort list #'< :key #'cdr))
      (let* ((string
               (with-output-to-string (output)
                 (print item output)))
             (vector (make-array (length string)
                                 :element-type 'octet
                                 :initial-contents (map 'list #'char-code string))))
        (md5:update-md5-state state vector)))
    (md5:finalize-md5-state state)))

CALC-HASH!
ARFE(9): 

ARFE(9): (dolist (symbol (list-data))
  (print symbol)
  (print (length (symbol-value symbol)))
  (print (calc-hash! (symbol-value symbol)))
  (terpri))

*4-IR* 
218 
#(13 212 196 15 111 85 214 47 227 40 49 93 136 3 252 25) 

*4* 
3044 
#(189 200 108 58 206 242 113 31 254 23 49 140 238 251 69 229) 

*5-IR* 
9608 
#(253 196 24 133 62 32 126 22 147 56 162 197 156 48 24 67) 

*5* 
291968 
#(127 182 159 179 222 116 15 137 167 165 25 41 202 241 245 95) 

*6-IR* 
1540944 
#(71 95 217 95 192 218 59 163 183 125 98 244 82 201 61 175) 
NIL
ARFE(10): 

ARFE(10): 

ARFE(10): 

ARFE(10): (DRIBBLE) 